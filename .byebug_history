c
n
response.body
expect(JSON.parse(response.body)).to include('message' => 'Logged out successfully')
expect(response).to have_http_status(:ok)
n
delete :destroy
request.headers['Authorization'] = "Bearer #{token}"
token = JWT.encode({ user_id: user.id }, Rails.application.secrets.secret_key_base)
c
delete :destroy, headers: { 'Authorization' => "Bearer #{eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE3MTAzOTk5MDN9.J2snuJoZ3HT7Ta1QvnQb2s066yIi3ZvwARG0GL0mtJQ}" }
a=response.body
response.body
JSON.parse
expect(JSON.parse(response.body)).to have_key('token')
expect(response).to have_http_status(:ok)
token
post :create, params: valid_paramsexpect(response).to have_http_status(:ok)
valid_params
c
generate_authentication_token
user.token
token = generate_authentication_token(user)
continue
c
render json: @employee, status: :created
 @employee.save
@employee = Employee.new(employee_params)
c
ccccc
c
render json: @employee, status: :created
 @employee = Employee.new(employee_params)
c
         }.to change(Employee, :count).by(1)
 post :create, params: { employee: attributes_for(:employee) }, format: :json
 it "creates a new employee"
post :create, params: { employee: attributes_for(:employee) }, format: :json
c
allow(controller).to receive(:current_user).and_return(user)
let(:user) { create(:user) }
c
 current_user.present?
c
@current_user = User.find_by(authentication_token: token)
authenticate_or_request_with_http_token do |token, options|
   12:       @current_user = User.find_by(authentication_token: token)
authenticate_or_request_with_http_token do |token, options|
c
allow(controller).to receive(:current_user).and_return(user)
let(:user) { create(:user) }
c
 current_user.present?
c
current_user.present?
current_user
c
current_user.present?
c
current_user.present?
c
allow(controller).to receive(:current_user).and_return(user)
let(:user) { create(:user) }
allow(controller).to receive(:current_user).and_return(user)
let(:user) { create(:user) }
c
allow(controller).to receive(:authorize_request).and_return(user)
let(:user) { create(:user) }
